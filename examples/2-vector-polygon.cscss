.title 'Styling polygon vector features'
.abstract 'Basic vector features styling (polygons)'

Landuse[dataLayer.type = vector and dataLayer.featuresGeometryDimensions = 2]
{
   // Do not show Landuse layer by default
   visibility: false;

   // Show land use if zoomed in more than 1:200,000 for data valid within visualization's selected time range
   [viz.sd < 200000 and validDate >= viz.timeInterval.start.date and validDate <= viz.timeInterval.end.date]
   {
      visibility: true;
      opacity: 0.8;
      zOrder: 1;
      fill: {color: gray; opacity: 0.5};
      stroke: {color: gray; width: 2.0 px; opacity: 1.0};

      // Select different fill and stroke color based on FunctionCode property
      [FunctionCode = 'parking']
      {
         fill.color: darkGray;
         stroke.color: #202020;
      }
      [FunctionCode = 'park']
      {
         fill.color: darkGreen;
         stroke.color: green;
      }
      [FunctionCode = 'commercial']
      {
         fill.color: lightGray;
         stroke.color: lightGray;
      }

      // If zoomed in more than 1:10,000
      [viz.sd < 10000]
      {
         // Change stroke width to 4 pixels
         stroke.width: 4.0 px;
         // Add a text marker (positioned at centroid + horizontal offset) showing FunctionTitle property
         marker: {elements: [
            Text(
               position: 20 0; // Offset 20 pixels to the right
               text: FunctionTitle;
               alignment: left top;
               font: {
                  face: 'Arial';
                  size: 14;
                  bold: true;
                  italic: true;
                  opacity: 1.0;
                  color: black;
               };
            )
         ]};
         // Add icons at centroid based on land use function code property
         [FunctionCode = 'parking']
         {
            marker.elements[1]:
               Image {
                  image: {uri: 'http://example.com/parkingIcon'; path: 'parkingIcon.png'; id: 'parking'; type: 'image/png'; ext: 'png'};
                  hotSpot: 50 pc 50 pc; tint: white; blackTint: blue; alphaThreshold: 0.1;
               };
         }
         [FunctionCode = 'park']
         {
            marker.elements[1]:
               Image {
                  image: {uri: 'http://example.com/park'; path: 'park.png'; id: 'park'; type: 'image/png'; ext: 'png'};
                  hotSpot: 50 pc 50 pc; tint: white; blackTint: blue; alphaThreshold: 0.1;
               };
         }
         [FunctionCode = 'commercial']
         {
            marker.elements[1]:
               Image {
                  image: {uri: 'http://example.com/commercial'; path: 'commercial.png'; id: 'commercial'; type: 'image/png'; ext: 'png'};
                  hotSpot: 50 pc 50 pc; tint: white; blackTint: blue; alphaThreshold: 0.1;
               };
         }
      }
   }
}
