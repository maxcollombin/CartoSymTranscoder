# Generated from CartoSymCSSLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,319,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,
        13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,
        17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,
        25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,
        30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,30,1,30,1,30,3,30,193,8,30,1,31,1,31,4,31,197,8,31,11,
        31,12,31,198,1,32,4,32,202,8,32,11,32,12,32,203,1,32,1,32,4,32,208,
        8,32,11,32,12,32,209,3,32,212,8,32,3,32,214,8,32,1,32,1,32,4,32,
        218,8,32,11,32,12,32,219,3,32,222,8,32,1,32,1,32,3,32,226,8,32,1,
        32,4,32,229,8,32,11,32,12,32,230,3,32,233,8,32,1,33,1,33,1,34,1,
        34,1,34,3,34,240,8,34,1,35,1,35,1,35,3,35,245,8,35,1,36,1,36,5,36,
        249,8,36,10,36,12,36,252,9,36,1,36,1,36,1,37,1,37,1,37,1,37,3,37,
        260,8,37,1,38,1,38,1,39,1,39,1,39,5,39,267,8,39,10,39,12,39,270,
        9,39,1,39,3,39,273,8,39,1,40,1,40,5,40,277,8,40,10,40,12,40,280,
        9,40,1,41,1,41,3,41,284,8,41,1,42,1,42,1,43,1,43,1,43,1,43,5,43,
        292,8,43,10,43,12,43,295,9,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,
        1,44,1,44,5,44,306,8,44,10,44,12,44,309,9,44,1,44,1,44,1,45,4,45,
        314,8,45,11,45,12,45,315,1,45,1,45,1,293,0,46,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,0,69,0,71,0,73,34,75,0,77,
        0,79,35,81,0,83,0,85,0,87,36,89,37,91,38,1,0,9,3,0,48,57,65,70,97,
        102,1,0,48,57,2,0,43,43,45,45,10,0,9,13,32,32,133,133,160,160,5760,
        5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,14,0,7,
        8,33,33,35,38,40,47,58,132,134,159,161,5759,5761,8191,8203,8231,
        8234,8238,8240,8286,8288,12287,12289,55295,57344,65533,3,0,48,57,
        768,879,8255,8256,14,0,65,90,95,95,97,122,192,214,216,246,248,767,
        880,893,895,8190,8204,8205,8304,8591,11264,12271,12289,55295,63744,
        64975,65008,65533,2,0,10,10,13,13,3,0,9,10,13,13,32,32,341,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,73,1,0,0,0,0,79,1,0,0,0,0,87,1,0,0,
        0,0,89,1,0,0,0,0,91,1,0,0,0,1,93,1,0,0,0,3,95,1,0,0,0,5,97,1,0,0,
        0,7,99,1,0,0,0,9,101,1,0,0,0,11,103,1,0,0,0,13,105,1,0,0,0,15,107,
        1,0,0,0,17,109,1,0,0,0,19,111,1,0,0,0,21,113,1,0,0,0,23,115,1,0,
        0,0,25,118,1,0,0,0,27,120,1,0,0,0,29,123,1,0,0,0,31,126,1,0,0,0,
        33,130,1,0,0,0,35,133,1,0,0,0,37,138,1,0,0,0,39,146,1,0,0,0,41,148,
        1,0,0,0,43,150,1,0,0,0,45,154,1,0,0,0,47,157,1,0,0,0,49,159,1,0,
        0,0,51,161,1,0,0,0,53,165,1,0,0,0,55,167,1,0,0,0,57,169,1,0,0,0,
        59,171,1,0,0,0,61,192,1,0,0,0,63,194,1,0,0,0,65,221,1,0,0,0,67,234,
        1,0,0,0,69,239,1,0,0,0,71,244,1,0,0,0,73,246,1,0,0,0,75,259,1,0,
        0,0,77,261,1,0,0,0,79,272,1,0,0,0,81,274,1,0,0,0,83,283,1,0,0,0,
        85,285,1,0,0,0,87,287,1,0,0,0,89,301,1,0,0,0,91,313,1,0,0,0,93,94,
        5,123,0,0,94,2,1,0,0,0,95,96,5,125,0,0,96,4,1,0,0,0,97,98,5,46,0,
        0,98,6,1,0,0,0,99,100,5,59,0,0,100,8,1,0,0,0,101,102,5,91,0,0,102,
        10,1,0,0,0,103,104,5,93,0,0,104,12,1,0,0,0,105,106,5,40,0,0,106,
        14,1,0,0,0,107,108,5,41,0,0,108,16,1,0,0,0,109,110,5,44,0,0,110,
        18,1,0,0,0,111,112,5,61,0,0,112,20,1,0,0,0,113,114,5,60,0,0,114,
        22,1,0,0,0,115,116,5,60,0,0,116,117,5,61,0,0,117,24,1,0,0,0,118,
        119,5,62,0,0,119,26,1,0,0,0,120,121,5,62,0,0,121,122,5,61,0,0,122,
        28,1,0,0,0,123,124,5,105,0,0,124,125,5,110,0,0,125,30,1,0,0,0,126,
        127,5,110,0,0,127,128,5,111,0,0,128,129,5,116,0,0,129,32,1,0,0,0,
        130,131,5,105,0,0,131,132,5,115,0,0,132,34,1,0,0,0,133,134,5,108,
        0,0,134,135,5,105,0,0,135,136,5,107,0,0,136,137,5,101,0,0,137,36,
        1,0,0,0,138,139,5,98,0,0,139,140,5,101,0,0,140,141,5,116,0,0,141,
        142,5,119,0,0,142,143,5,101,0,0,143,144,5,101,0,0,144,145,5,110,
        0,0,145,38,1,0,0,0,146,147,5,63,0,0,147,40,1,0,0,0,148,149,5,58,
        0,0,149,42,1,0,0,0,150,151,5,97,0,0,151,152,5,110,0,0,152,153,5,
        100,0,0,153,44,1,0,0,0,154,155,5,111,0,0,155,156,5,114,0,0,156,46,
        1,0,0,0,157,158,5,42,0,0,158,48,1,0,0,0,159,160,5,47,0,0,160,50,
        1,0,0,0,161,162,5,100,0,0,162,163,5,105,0,0,163,164,5,118,0,0,164,
        52,1,0,0,0,165,166,5,37,0,0,166,54,1,0,0,0,167,168,5,94,0,0,168,
        56,1,0,0,0,169,170,5,45,0,0,170,58,1,0,0,0,171,172,5,43,0,0,172,
        60,1,0,0,0,173,174,5,112,0,0,174,193,5,120,0,0,175,193,5,109,0,0,
        176,177,5,102,0,0,177,193,5,116,0,0,178,179,5,112,0,0,179,193,5,
        99,0,0,180,181,5,112,0,0,181,193,5,116,0,0,182,183,5,101,0,0,183,
        193,5,109,0,0,184,185,5,105,0,0,185,186,5,110,0,0,186,187,5,99,0,
        0,187,193,5,104,0,0,188,189,5,99,0,0,189,193,5,109,0,0,190,191,5,
        109,0,0,191,193,5,109,0,0,192,173,1,0,0,0,192,175,1,0,0,0,192,176,
        1,0,0,0,192,178,1,0,0,0,192,180,1,0,0,0,192,182,1,0,0,0,192,184,
        1,0,0,0,192,188,1,0,0,0,192,190,1,0,0,0,193,62,1,0,0,0,194,196,5,
        35,0,0,195,197,7,0,0,0,196,195,1,0,0,0,197,198,1,0,0,0,198,196,1,
        0,0,0,198,199,1,0,0,0,199,64,1,0,0,0,200,202,7,1,0,0,201,200,1,0,
        0,0,202,203,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,213,1,0,
        0,0,205,211,5,46,0,0,206,208,7,1,0,0,207,206,1,0,0,0,208,209,1,0,
        0,0,209,207,1,0,0,0,209,210,1,0,0,0,210,212,1,0,0,0,211,207,1,0,
        0,0,211,212,1,0,0,0,212,214,1,0,0,0,213,205,1,0,0,0,213,214,1,0,
        0,0,214,222,1,0,0,0,215,217,5,46,0,0,216,218,7,1,0,0,217,216,1,0,
        0,0,218,219,1,0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,222,1,0,
        0,0,221,201,1,0,0,0,221,215,1,0,0,0,222,232,1,0,0,0,223,225,5,69,
        0,0,224,226,7,2,0,0,225,224,1,0,0,0,225,226,1,0,0,0,226,228,1,0,
        0,0,227,229,7,1,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,228,1,0,
        0,0,230,231,1,0,0,0,231,233,1,0,0,0,232,223,1,0,0,0,232,233,1,0,
        0,0,233,66,1,0,0,0,234,235,7,3,0,0,235,68,1,0,0,0,236,240,3,71,35,
        0,237,240,5,34,0,0,238,240,3,75,37,0,239,236,1,0,0,0,239,237,1,0,
        0,0,239,238,1,0,0,0,240,70,1,0,0,0,241,245,3,77,38,0,242,245,7,1,
        0,0,243,245,3,67,33,0,244,241,1,0,0,0,244,242,1,0,0,0,244,243,1,
        0,0,0,245,72,1,0,0,0,246,250,5,39,0,0,247,249,3,69,34,0,248,247,
        1,0,0,0,249,252,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,253,
        1,0,0,0,252,250,1,0,0,0,253,254,5,39,0,0,254,74,1,0,0,0,255,256,
        5,39,0,0,256,260,5,39,0,0,257,258,5,92,0,0,258,260,5,39,0,0,259,
        255,1,0,0,0,259,257,1,0,0,0,260,76,1,0,0,0,261,262,7,4,0,0,262,78,
        1,0,0,0,263,273,3,81,40,0,264,268,5,34,0,0,265,267,3,71,35,0,266,
        265,1,0,0,0,267,270,1,0,0,0,268,266,1,0,0,0,268,269,1,0,0,0,269,
        271,1,0,0,0,270,268,1,0,0,0,271,273,5,34,0,0,272,263,1,0,0,0,272,
        264,1,0,0,0,273,80,1,0,0,0,274,278,3,85,42,0,275,277,3,83,41,0,276,
        275,1,0,0,0,277,280,1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,
        82,1,0,0,0,280,278,1,0,0,0,281,284,3,85,42,0,282,284,7,5,0,0,283,
        281,1,0,0,0,283,282,1,0,0,0,284,84,1,0,0,0,285,286,7,6,0,0,286,86,
        1,0,0,0,287,288,5,47,0,0,288,289,5,42,0,0,289,293,1,0,0,0,290,292,
        9,0,0,0,291,290,1,0,0,0,292,295,1,0,0,0,293,294,1,0,0,0,293,291,
        1,0,0,0,294,296,1,0,0,0,295,293,1,0,0,0,296,297,5,42,0,0,297,298,
        5,47,0,0,298,299,1,0,0,0,299,300,6,43,0,0,300,88,1,0,0,0,301,302,
        5,47,0,0,302,303,5,47,0,0,303,307,1,0,0,0,304,306,8,7,0,0,305,304,
        1,0,0,0,306,309,1,0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,310,
        1,0,0,0,309,307,1,0,0,0,310,311,6,44,0,0,311,90,1,0,0,0,312,314,
        7,8,0,0,313,312,1,0,0,0,314,315,1,0,0,0,315,313,1,0,0,0,315,316,
        1,0,0,0,316,317,1,0,0,0,317,318,6,45,1,0,318,92,1,0,0,0,24,0,192,
        196,198,203,209,211,213,219,221,225,230,232,239,244,250,259,268,
        272,278,283,293,307,315,2,0,3,0,0,2,0
    ]

class CartoSymCSSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    WHITESPACE = 2
    COMMENTS = 3

    LCBR = 1
    RCBR = 2
    DOT = 3
    SEMI = 4
    LSBR = 5
    RSBR = 6
    LPAR = 7
    RPAR = 8
    COMMA = 9
    EQ = 10
    LT = 11
    LTEQ = 12
    GT = 13
    GTEQ = 14
    IN = 15
    NOT = 16
    IS = 17
    LIKE = 18
    BETWEEN = 19
    QUESTION = 20
    COLON = 21
    AND = 22
    OR = 23
    MUL = 24
    DIV = 25
    IDIV = 26
    MOD = 27
    POW = 28
    MINUS = 29
    PLUS = 30
    UNIT = 31
    HEX_LITERAL = 32
    NUMERIC_LITERAL = 33
    CHARACTER_LITERAL = 34
    IDENTIFIER = 35
    COMMENT = 36
    LINE_COMMENT = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN", u"WHITESPACE", 
                                                          u"COMMENTS" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "'.'", "';'", "'['", "']'", "'('", "')'", "','", 
            "'='", "'<'", "'<='", "'>'", "'>='", "'in'", "'not'", "'is'", 
            "'like'", "'between'", "'?'", "':'", "'and'", "'or'", "'*'", 
            "'/'", "'div'", "'%'", "'^'", "'-'", "'+'" ]

    symbolicNames = [ "<INVALID>",
            "LCBR", "RCBR", "DOT", "SEMI", "LSBR", "RSBR", "LPAR", "RPAR", 
            "COMMA", "EQ", "LT", "LTEQ", "GT", "GTEQ", "IN", "NOT", "IS", 
            "LIKE", "BETWEEN", "QUESTION", "COLON", "AND", "OR", "MUL", 
            "DIV", "IDIV", "MOD", "POW", "MINUS", "PLUS", "UNIT", "HEX_LITERAL", 
            "NUMERIC_LITERAL", "CHARACTER_LITERAL", "IDENTIFIER", "COMMENT", 
            "LINE_COMMENT", "WS" ]

    ruleNames = [ "LCBR", "RCBR", "DOT", "SEMI", "LSBR", "RSBR", "LPAR", 
                  "RPAR", "COMMA", "EQ", "LT", "LTEQ", "GT", "GTEQ", "IN", 
                  "NOT", "IS", "LIKE", "BETWEEN", "QUESTION", "COLON", "AND", 
                  "OR", "MUL", "DIV", "IDIV", "MOD", "POW", "MINUS", "PLUS", 
                  "UNIT", "HEX_LITERAL", "NUMERIC_LITERAL", "WHITESPACE", 
                  "CHARACTER", "CHARACTER_NODLBQUOTE", "CHARACTER_LITERAL", 
                  "ESCAPED_QUOTE", "ALPHA_NODBLQUOTE", "IDENTIFIER", "UNQUOTED_IDENTIFIER", 
                  "IDENTIFIER_PART", "IDENTIFIER_START", "COMMENT", "LINE_COMMENT", 
                  "WS" ]

    grammarFileName = "CartoSymCSSLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


